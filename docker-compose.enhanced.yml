version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - RATE_LIMIT_WINDOW=60000
      - RATE_LIMIT_MAX=1000
    depends_on:
      - consul
      - redis
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '2'
          memory: 2G

  # AI Content Service
  ai-content-service:
    build: ./services/ai-content
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STABILITY_API_KEY=${STABILITY_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # ML Training Service
  ml-training-service:
    build: ./services/ml-training
    volumes:
      - ml-models:/app/models
      - training-data:/app/data
    environment:
      - TRAINING_SCHEDULE="0 2 * * *"
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 16G

  # Real-time Analytics
  analytics-service:
    build: ./services/analytics
    depends_on:
      - kafka
      - elasticsearch
      - clickhouse
    environment:
      - KAFKA_BROKERS=kafka:9092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    deploy:
      replicas: 3

  # Vector Database for AI
  pinecone:
    image: pinecone/pinecone:latest
    environment:
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENV}
    ports:
      - "8080:8080"

  # Message Streaming
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  # Time-series Database
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse-data:/var/lib/clickhouse

  # Service Mesh
  consul:
    image: consul:latest
    ports:
      - "8500:8500"
    command: agent -server -bootstrap -ui -client=0.0.0.0

  # Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411

volumes:
  ml-models:
  training-data:
  clickhouse-data: