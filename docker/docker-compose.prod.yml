version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: fineacers-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - frontend_build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    networks:
      - fineacers-network

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: fineacers-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://fineacers:${DB_PASSWORD}@postgres:5432/fineacers_automation
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - fineacers-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: fineacers-frontend
    volumes:
      - frontend_build:/app/.next
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.yourdomain.com
    networks:
      - fineacers-network

  ai-service:
    build:
      context: ../ai-service
      dockerfile: Dockerfile
    container_name: fineacers-ai
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
    networks:
      - fineacers-network

  postgres:
    image: postgres:14
    container_name: fineacers-postgres
    environment:
      - POSTGRES_USER=fineacers
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=fineacers_automation
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fineacers-network

  redis:
    image: redis:7-alpine
    container_name: fineacers-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - fineacers-network

  n8n:
    image: n8nio/n8n
    container_name: fineacers-n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - fineacers-network

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  frontend_build:

networks:
  fineacers-network:
    driver: bridge